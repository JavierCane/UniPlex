# This is the main configuration file for the application.
# ~~~~~

application {
  major    = 0
  minor    = 1
  revision = 2
  version = ${application.major}.${application.minor}.${application.revision}
  name = UniPlex ${application.major}.${application.minor}
}

date.format="yyyy-MM-dd'T'HH:mm:ss"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="^c`^1yilr8]cprNS/wDH9xwNhq@us?0jZvH;vBMy`:Iw`@Y_a`yv;wEpMoO@;dYB"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# ***  Atención: Estos valores deben ser sobrescritos por la configuración que uses en tu entorno.
# *** Está explicado con más detalle y un paso a paso en el archivo "devEjemplo.conf" ;)
#
db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:mem:play"
db.default.logStatements=true

# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

